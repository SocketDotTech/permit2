/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  CallOverrides,
} from "ethers";

interface PermitHashInterface extends ethers.utils.Interface {
  functions: {
    "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH()": FunctionFragment;
    "_PERMIT_BATCH_TYPEHASH()": FunctionFragment;
    "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB()": FunctionFragment;
    "_PERMIT_DETAILS_TYPEHASH()": FunctionFragment;
    "_PERMIT_SINGLE_TYPEHASH()": FunctionFragment;
    "_PERMIT_TRANSFER_FROM_TYPEHASH()": FunctionFragment;
    "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB()": FunctionFragment;
    "_TOKEN_PERMISSIONS_TYPEHASH()": FunctionFragment;
    "_TOKEN_PERMISSIONS_TYPESTRING()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_PERMIT_BATCH_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_PERMIT_DETAILS_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_PERMIT_SINGLE_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_PERMIT_TRANSFER_FROM_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_TOKEN_PERMISSIONS_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_TOKEN_PERMISSIONS_TYPESTRING",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_PERMIT_BATCH_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_PERMIT_DETAILS_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_PERMIT_SINGLE_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_PERMIT_TRANSFER_FROM_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_TOKEN_PERMISSIONS_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_TOKEN_PERMISSIONS_TYPESTRING",
    data: BytesLike
  ): Result;

  events: {};
}

export class PermitHash extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: PermitHashInterface;

  functions: {
    _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<[string]>;

    _PERMIT_BATCH_TYPEHASH(overrides?: CallOverrides): Promise<[string]>;

    _PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB(
      overrides?: CallOverrides
    ): Promise<[string]>;

    _PERMIT_DETAILS_TYPEHASH(overrides?: CallOverrides): Promise<[string]>;

    _PERMIT_SINGLE_TYPEHASH(overrides?: CallOverrides): Promise<[string]>;

    _PERMIT_TRANSFER_FROM_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<[string]>;

    _PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB(
      overrides?: CallOverrides
    ): Promise<[string]>;

    _TOKEN_PERMISSIONS_TYPEHASH(overrides?: CallOverrides): Promise<[string]>;

    _TOKEN_PERMISSIONS_TYPESTRING(overrides?: CallOverrides): Promise<[string]>;
  };

  _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH(
    overrides?: CallOverrides
  ): Promise<string>;

  _PERMIT_BATCH_TYPEHASH(overrides?: CallOverrides): Promise<string>;

  _PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB(
    overrides?: CallOverrides
  ): Promise<string>;

  _PERMIT_DETAILS_TYPEHASH(overrides?: CallOverrides): Promise<string>;

  _PERMIT_SINGLE_TYPEHASH(overrides?: CallOverrides): Promise<string>;

  _PERMIT_TRANSFER_FROM_TYPEHASH(overrides?: CallOverrides): Promise<string>;

  _PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB(
    overrides?: CallOverrides
  ): Promise<string>;

  _TOKEN_PERMISSIONS_TYPEHASH(overrides?: CallOverrides): Promise<string>;

  _TOKEN_PERMISSIONS_TYPESTRING(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<string>;

    _PERMIT_BATCH_TYPEHASH(overrides?: CallOverrides): Promise<string>;

    _PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB(
      overrides?: CallOverrides
    ): Promise<string>;

    _PERMIT_DETAILS_TYPEHASH(overrides?: CallOverrides): Promise<string>;

    _PERMIT_SINGLE_TYPEHASH(overrides?: CallOverrides): Promise<string>;

    _PERMIT_TRANSFER_FROM_TYPEHASH(overrides?: CallOverrides): Promise<string>;

    _PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB(
      overrides?: CallOverrides
    ): Promise<string>;

    _TOKEN_PERMISSIONS_TYPEHASH(overrides?: CallOverrides): Promise<string>;

    _TOKEN_PERMISSIONS_TYPESTRING(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _PERMIT_BATCH_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>;

    _PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _PERMIT_DETAILS_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>;

    _PERMIT_SINGLE_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>;

    _PERMIT_TRANSFER_FROM_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _TOKEN_PERMISSIONS_TYPEHASH(overrides?: CallOverrides): Promise<BigNumber>;

    _TOKEN_PERMISSIONS_TYPESTRING(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _PERMIT_BATCH_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _PERMIT_DETAILS_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _PERMIT_SINGLE_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _PERMIT_TRANSFER_FROM_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _TOKEN_PERMISSIONS_TYPEHASH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _TOKEN_PERMISSIONS_TYPESTRING(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
