/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  DeterministicDeployFactory,
  DeterministicDeployFactoryInterface,
} from "../DeterministicDeployFactory";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Deploy",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60808060405234610016576101d6908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c639c4ae2d01461002857600080fd5b346101155760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101155760043567ffffffffffffffff80821161011157366023830112156101115782826004013592828411610104575b604051927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81601f8801160116840190848210908211176100f7575b60405283835236602485830101116100f357836100f094602460209301838601378301015260243590610148565b80f35b5080fd5b6100ff610118565b6100c2565b61010c610118565b610084565b8280fd5b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020815191016000f5803b1561019b5760207f55ea6c6b31543d8e2ec6a72f71a79c0f4b72ed0d4757172b043d8f4f4cd848489173ffffffffffffffffffffffffffffffffffffffff60405191168152a1565b600080fdfea264697066735822122012ec00ea4800af0d6f9c1ca991e963fd9c9d436d40cb3acf229600b46d9ff24c64736f6c63430008110033";

export class DeterministicDeployFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeterministicDeployFactory> {
    return super.deploy(overrides || {}) as Promise<DeterministicDeployFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DeterministicDeployFactory {
    return super.attach(address) as DeterministicDeployFactory;
  }
  connect(signer: Signer): DeterministicDeployFactory__factory {
    return super.connect(signer) as DeterministicDeployFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeterministicDeployFactoryInterface {
    return new utils.Interface(_abi) as DeterministicDeployFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeterministicDeployFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DeterministicDeployFactory;
  }
}
